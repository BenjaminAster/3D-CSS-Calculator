:root {
  color-scheme: dark;
}

body {
  font-family: sans-serif;
  background-color: black;
  font-size: 1.5rem;
  perspective: 30em;
  perspective-origin: 50% calc(50% - 2em);
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}
body * {
  transform-style: preserve-3d;
}

* {
  color: white;
  background: transparent;
}

a {
  color: lightSkyBlue;
}

section.addition {
  font-family: monospace;
  counter-reset: first-number second-number sum-number 0;
  user-select: none;
}
section.addition .operator {
  font-weight: bold;
  font-size: 2em;
}
section.addition .number-display {
  font-weight: bold;
  position: absolute;
  transform: translateZ(1em);
  padding-left: 0.4em;
}
section.addition .number-display.first::after {
  content: "(" counter(first-number) ")";
}
section.addition .number-display.second::after {
  content: "(" counter(second-number) ")";
}
section.addition .number-display.sum::after {
  content: "(" counter(sum-number) ")";
}
section.addition input[type=checkbox] {
  position: absolute;
  z-index: -1;
  opacity: 0;
}
section.addition .labels {
  display: inline-flex;
  flex-wrap: wrap;
  gap: 1em;
}
section.addition .labels span {
  display: inline-block;
  width: 2em;
  height: 2em;
}
section.addition .labels label[for] {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 1em;
  width: 2em;
  height: 2em;
  color: black;
  --is-one: 0;
}
section.addition .labels label[for] .left,
section.addition .labels label[for] .right,
section.addition .labels label[for] .front,
section.addition .labels label[for] .back,
section.addition .labels label[for] .top,
section.addition .labels label[for] .bottom {
  position: absolute;
  width: 2em;
  height: 2em;
  background: rgba(173, 216, 230, 0.6);
  box-shadow: 0 0 0.5em #000a inset;
  --global-transform: rotateX(calc(var(--is-one) * 90deg));
  transition: transform 250ms ease-in-out;
}
section.addition .labels label[for] .left::before,
section.addition .labels label[for] .right::before,
section.addition .labels label[for] .front::before,
section.addition .labels label[for] .back::before,
section.addition .labels label[for] .top::before,
section.addition .labels label[for] .bottom::before {
  width: 100%;
  height: 100%;
  color: black;
  display: flex;
  justify-content: center;
  align-items: center;
}
section.addition .labels label[for] .front {
  transform: var(--global-transform) translateZ(1em);
}
section.addition .labels label[for] .front::before {
  content: "0";
}
section.addition .labels label[for] .right {
  transform: var(--global-transform) rotateY(90deg) translateZ(1em);
}
section.addition .labels label[for] .back {
  transform: var(--global-transform) rotateY(180deg) translateZ(1em);
}
section.addition .labels label[for] .left {
  transform: var(--global-transform) rotateY(-90deg) translateZ(1em);
}
section.addition .labels label[for] .top {
  transform: var(--global-transform) translateY(-1em) rotateX(90deg);
}
section.addition .labels label[for] .bottom {
  transform: var(--global-transform) translateY(1em) rotateX(90deg) rotateZ(180deg) rotateY(180deg);
}
section.addition .labels label[for] .bottom::before {
  content: "1";
}
section.addition .result-display {
  --col-bg: white;
  --col-fg: black;
}
section.addition .result-display div.bits {
  display: inline-flex;
  flex-wrap: wrap;
  gap: 2px;
}
section.addition .result-display div.bits span.show-check {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 2em;
  height: 2em;
  --gap: 10em;
  --char-width: 0.5em;
  gap: var(--gap);
  clip-path: inset(0);
  background-color: var(--col-bg);
}
section.addition .result-display div.bits span.show-check span.digit-0, section.addition .result-display div.bits span.show-check span.digit-1 {
  color: var(--col-fg);
}
section.addition input#check-first-0:checked ~ input#check-second-0:checked ~ .result-display {
  --check-0-sum: 0;
  --check-0-carry: 1;
}
section.addition input#check-first-0:checked ~ input#check-second-0:not(:checked) ~ .result-display {
  --check-0-sum: 1;
  --check-0-carry: 0;
}
section.addition input#check-first-0:not(:checked) ~ input#check-second-0:checked ~ .result-display {
  --check-0-sum: 1;
  --check-0-carry: 0;
}
section.addition input#check-first-0:not(:checked) ~ input#check-second-0:not(:checked) ~ .result-display {
  --check-0-sum: 0;
  --check-0-carry: 0;
}
section.addition input#check-first-0:checked {
  counter-increment: first-number 1 sum-number 1;
}
section.addition input#check-first-0:checked ~ .first-labels label[for=check-first-0] {
  --is-one: 1;
}
section.addition input#check-second-0:checked {
  counter-increment: second-number 1 sum-number 1;
}
section.addition input#check-second-0:checked ~ .second-labels label[for=check-second-0] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-0 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-0-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-0 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-0-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-1:checked ~ input#check-second-1:checked ~ .result-display {
  --check-1-sum: calc(var(--check-0-carry));
  --check-1-carry: 1;
}
section.addition input#check-first-1:checked ~ input#check-second-1:not(:checked) ~ .result-display {
  --check-1-sum: calc(1 - var(--check-0-carry));
  --check-1-carry: calc(var(--check-0-carry));
}
section.addition input#check-first-1:not(:checked) ~ input#check-second-1:checked ~ .result-display {
  --check-1-sum: calc(1 - var(--check-0-carry));
  --check-1-carry: calc(var(--check-0-carry));
}
section.addition input#check-first-1:not(:checked) ~ input#check-second-1:not(:checked) ~ .result-display {
  --check-1-sum: calc(var(--check-0-carry));
  --check-1-carry: 0;
}
section.addition input#check-first-1:checked {
  counter-increment: first-number 2 sum-number 2;
}
section.addition input#check-first-1:checked ~ .first-labels label[for=check-first-1] {
  --is-one: 1;
}
section.addition input#check-second-1:checked {
  counter-increment: second-number 2 sum-number 2;
}
section.addition input#check-second-1:checked ~ .second-labels label[for=check-second-1] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-1 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-1-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-1 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-1-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-2:checked ~ input#check-second-2:checked ~ .result-display {
  --check-2-sum: calc(var(--check-1-carry));
  --check-2-carry: 1;
}
section.addition input#check-first-2:checked ~ input#check-second-2:not(:checked) ~ .result-display {
  --check-2-sum: calc(1 - var(--check-1-carry));
  --check-2-carry: calc(var(--check-1-carry));
}
section.addition input#check-first-2:not(:checked) ~ input#check-second-2:checked ~ .result-display {
  --check-2-sum: calc(1 - var(--check-1-carry));
  --check-2-carry: calc(var(--check-1-carry));
}
section.addition input#check-first-2:not(:checked) ~ input#check-second-2:not(:checked) ~ .result-display {
  --check-2-sum: calc(var(--check-1-carry));
  --check-2-carry: 0;
}
section.addition input#check-first-2:checked {
  counter-increment: first-number 4 sum-number 4;
}
section.addition input#check-first-2:checked ~ .first-labels label[for=check-first-2] {
  --is-one: 1;
}
section.addition input#check-second-2:checked {
  counter-increment: second-number 4 sum-number 4;
}
section.addition input#check-second-2:checked ~ .second-labels label[for=check-second-2] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-2 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-2-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-2 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-2-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-3:checked ~ input#check-second-3:checked ~ .result-display {
  --check-3-sum: calc(var(--check-2-carry));
  --check-3-carry: 1;
}
section.addition input#check-first-3:checked ~ input#check-second-3:not(:checked) ~ .result-display {
  --check-3-sum: calc(1 - var(--check-2-carry));
  --check-3-carry: calc(var(--check-2-carry));
}
section.addition input#check-first-3:not(:checked) ~ input#check-second-3:checked ~ .result-display {
  --check-3-sum: calc(1 - var(--check-2-carry));
  --check-3-carry: calc(var(--check-2-carry));
}
section.addition input#check-first-3:not(:checked) ~ input#check-second-3:not(:checked) ~ .result-display {
  --check-3-sum: calc(var(--check-2-carry));
  --check-3-carry: 0;
}
section.addition input#check-first-3:checked {
  counter-increment: first-number 8 sum-number 8;
}
section.addition input#check-first-3:checked ~ .first-labels label[for=check-first-3] {
  --is-one: 1;
}
section.addition input#check-second-3:checked {
  counter-increment: second-number 8 sum-number 8;
}
section.addition input#check-second-3:checked ~ .second-labels label[for=check-second-3] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-3 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-3-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-3 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-3-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-4:checked ~ input#check-second-4:checked ~ .result-display {
  --check-4-sum: calc(var(--check-3-carry));
  --check-4-carry: 1;
}
section.addition input#check-first-4:checked ~ input#check-second-4:not(:checked) ~ .result-display {
  --check-4-sum: calc(1 - var(--check-3-carry));
  --check-4-carry: calc(var(--check-3-carry));
}
section.addition input#check-first-4:not(:checked) ~ input#check-second-4:checked ~ .result-display {
  --check-4-sum: calc(1 - var(--check-3-carry));
  --check-4-carry: calc(var(--check-3-carry));
}
section.addition input#check-first-4:not(:checked) ~ input#check-second-4:not(:checked) ~ .result-display {
  --check-4-sum: calc(var(--check-3-carry));
  --check-4-carry: 0;
}
section.addition input#check-first-4:checked {
  counter-increment: first-number 16 sum-number 16;
}
section.addition input#check-first-4:checked ~ .first-labels label[for=check-first-4] {
  --is-one: 1;
}
section.addition input#check-second-4:checked {
  counter-increment: second-number 16 sum-number 16;
}
section.addition input#check-second-4:checked ~ .second-labels label[for=check-second-4] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-4 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-4-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-4 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-4-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-5:checked ~ input#check-second-5:checked ~ .result-display {
  --check-5-sum: calc(var(--check-4-carry));
  --check-5-carry: 1;
}
section.addition input#check-first-5:checked ~ input#check-second-5:not(:checked) ~ .result-display {
  --check-5-sum: calc(1 - var(--check-4-carry));
  --check-5-carry: calc(var(--check-4-carry));
}
section.addition input#check-first-5:not(:checked) ~ input#check-second-5:checked ~ .result-display {
  --check-5-sum: calc(1 - var(--check-4-carry));
  --check-5-carry: calc(var(--check-4-carry));
}
section.addition input#check-first-5:not(:checked) ~ input#check-second-5:not(:checked) ~ .result-display {
  --check-5-sum: calc(var(--check-4-carry));
  --check-5-carry: 0;
}
section.addition input#check-first-5:checked {
  counter-increment: first-number 32 sum-number 32;
}
section.addition input#check-first-5:checked ~ .first-labels label[for=check-first-5] {
  --is-one: 1;
}
section.addition input#check-second-5:checked {
  counter-increment: second-number 32 sum-number 32;
}
section.addition input#check-second-5:checked ~ .second-labels label[for=check-second-5] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-5 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-5-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-5 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-5-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-6:checked ~ input#check-second-6:checked ~ .result-display {
  --check-6-sum: calc(var(--check-5-carry));
  --check-6-carry: 1;
}
section.addition input#check-first-6:checked ~ input#check-second-6:not(:checked) ~ .result-display {
  --check-6-sum: calc(1 - var(--check-5-carry));
  --check-6-carry: calc(var(--check-5-carry));
}
section.addition input#check-first-6:not(:checked) ~ input#check-second-6:checked ~ .result-display {
  --check-6-sum: calc(1 - var(--check-5-carry));
  --check-6-carry: calc(var(--check-5-carry));
}
section.addition input#check-first-6:not(:checked) ~ input#check-second-6:not(:checked) ~ .result-display {
  --check-6-sum: calc(var(--check-5-carry));
  --check-6-carry: 0;
}
section.addition input#check-first-6:checked {
  counter-increment: first-number 64 sum-number 64;
}
section.addition input#check-first-6:checked ~ .first-labels label[for=check-first-6] {
  --is-one: 1;
}
section.addition input#check-second-6:checked {
  counter-increment: second-number 64 sum-number 64;
}
section.addition input#check-second-6:checked ~ .second-labels label[for=check-second-6] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-6 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-6-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-6 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-6-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-7:checked ~ input#check-second-7:checked ~ .result-display {
  --check-7-sum: calc(var(--check-6-carry));
  --check-7-carry: 1;
}
section.addition input#check-first-7:checked ~ input#check-second-7:not(:checked) ~ .result-display {
  --check-7-sum: calc(1 - var(--check-6-carry));
  --check-7-carry: calc(var(--check-6-carry));
}
section.addition input#check-first-7:not(:checked) ~ input#check-second-7:checked ~ .result-display {
  --check-7-sum: calc(1 - var(--check-6-carry));
  --check-7-carry: calc(var(--check-6-carry));
}
section.addition input#check-first-7:not(:checked) ~ input#check-second-7:not(:checked) ~ .result-display {
  --check-7-sum: calc(var(--check-6-carry));
  --check-7-carry: 0;
}
section.addition input#check-first-7:checked {
  counter-increment: first-number 128 sum-number 128;
}
section.addition input#check-first-7:checked ~ .first-labels label[for=check-first-7] {
  --is-one: 1;
}
section.addition input#check-second-7:checked {
  counter-increment: second-number 128 sum-number 128;
}
section.addition input#check-second-7:checked ~ .second-labels label[for=check-second-7] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-7 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-7-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-7 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-7-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-8:checked ~ input#check-second-8:checked ~ .result-display {
  --check-8-sum: calc(var(--check-7-carry));
  --check-8-carry: 1;
}
section.addition input#check-first-8:checked ~ input#check-second-8:not(:checked) ~ .result-display {
  --check-8-sum: calc(1 - var(--check-7-carry));
  --check-8-carry: calc(var(--check-7-carry));
}
section.addition input#check-first-8:not(:checked) ~ input#check-second-8:checked ~ .result-display {
  --check-8-sum: calc(1 - var(--check-7-carry));
  --check-8-carry: calc(var(--check-7-carry));
}
section.addition input#check-first-8:not(:checked) ~ input#check-second-8:not(:checked) ~ .result-display {
  --check-8-sum: calc(var(--check-7-carry));
  --check-8-carry: 0;
}
section.addition input#check-first-8:checked {
  counter-increment: first-number 256 sum-number 256;
}
section.addition input#check-first-8:checked ~ .first-labels label[for=check-first-8] {
  --is-one: 1;
}
section.addition input#check-second-8:checked {
  counter-increment: second-number 256 sum-number 256;
}
section.addition input#check-second-8:checked ~ .second-labels label[for=check-second-8] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-8 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-8-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-8 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-8-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-9:checked ~ input#check-second-9:checked ~ .result-display {
  --check-9-sum: calc(var(--check-8-carry));
  --check-9-carry: 1;
}
section.addition input#check-first-9:checked ~ input#check-second-9:not(:checked) ~ .result-display {
  --check-9-sum: calc(1 - var(--check-8-carry));
  --check-9-carry: calc(var(--check-8-carry));
}
section.addition input#check-first-9:not(:checked) ~ input#check-second-9:checked ~ .result-display {
  --check-9-sum: calc(1 - var(--check-8-carry));
  --check-9-carry: calc(var(--check-8-carry));
}
section.addition input#check-first-9:not(:checked) ~ input#check-second-9:not(:checked) ~ .result-display {
  --check-9-sum: calc(var(--check-8-carry));
  --check-9-carry: 0;
}
section.addition input#check-first-9:checked {
  counter-increment: first-number 512 sum-number 512;
}
section.addition input#check-first-9:checked ~ .first-labels label[for=check-first-9] {
  --is-one: 1;
}
section.addition input#check-second-9:checked {
  counter-increment: second-number 512 sum-number 512;
}
section.addition input#check-second-9:checked ~ .second-labels label[for=check-second-9] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-9 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-9-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-9 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-9-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-10:checked ~ input#check-second-10:checked ~ .result-display {
  --check-10-sum: calc(var(--check-9-carry));
  --check-10-carry: 1;
}
section.addition input#check-first-10:checked ~ input#check-second-10:not(:checked) ~ .result-display {
  --check-10-sum: calc(1 - var(--check-9-carry));
  --check-10-carry: calc(var(--check-9-carry));
}
section.addition input#check-first-10:not(:checked) ~ input#check-second-10:checked ~ .result-display {
  --check-10-sum: calc(1 - var(--check-9-carry));
  --check-10-carry: calc(var(--check-9-carry));
}
section.addition input#check-first-10:not(:checked) ~ input#check-second-10:not(:checked) ~ .result-display {
  --check-10-sum: calc(var(--check-9-carry));
  --check-10-carry: 0;
}
section.addition input#check-first-10:checked {
  counter-increment: first-number 1024 sum-number 1024;
}
section.addition input#check-first-10:checked ~ .first-labels label[for=check-first-10] {
  --is-one: 1;
}
section.addition input#check-second-10:checked {
  counter-increment: second-number 1024 sum-number 1024;
}
section.addition input#check-second-10:checked ~ .second-labels label[for=check-second-10] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-10 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-10-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-10 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-10-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-11:checked ~ input#check-second-11:checked ~ .result-display {
  --check-11-sum: calc(var(--check-10-carry));
  --check-11-carry: 1;
}
section.addition input#check-first-11:checked ~ input#check-second-11:not(:checked) ~ .result-display {
  --check-11-sum: calc(1 - var(--check-10-carry));
  --check-11-carry: calc(var(--check-10-carry));
}
section.addition input#check-first-11:not(:checked) ~ input#check-second-11:checked ~ .result-display {
  --check-11-sum: calc(1 - var(--check-10-carry));
  --check-11-carry: calc(var(--check-10-carry));
}
section.addition input#check-first-11:not(:checked) ~ input#check-second-11:not(:checked) ~ .result-display {
  --check-11-sum: calc(var(--check-10-carry));
  --check-11-carry: 0;
}
section.addition input#check-first-11:checked {
  counter-increment: first-number 2048 sum-number 2048;
}
section.addition input#check-first-11:checked ~ .first-labels label[for=check-first-11] {
  --is-one: 1;
}
section.addition input#check-second-11:checked {
  counter-increment: second-number 2048 sum-number 2048;
}
section.addition input#check-second-11:checked ~ .second-labels label[for=check-second-11] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-11 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-11-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-11 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-11-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-12:checked ~ input#check-second-12:checked ~ .result-display {
  --check-12-sum: calc(var(--check-11-carry));
  --check-12-carry: 1;
}
section.addition input#check-first-12:checked ~ input#check-second-12:not(:checked) ~ .result-display {
  --check-12-sum: calc(1 - var(--check-11-carry));
  --check-12-carry: calc(var(--check-11-carry));
}
section.addition input#check-first-12:not(:checked) ~ input#check-second-12:checked ~ .result-display {
  --check-12-sum: calc(1 - var(--check-11-carry));
  --check-12-carry: calc(var(--check-11-carry));
}
section.addition input#check-first-12:not(:checked) ~ input#check-second-12:not(:checked) ~ .result-display {
  --check-12-sum: calc(var(--check-11-carry));
  --check-12-carry: 0;
}
section.addition input#check-first-12:checked {
  counter-increment: first-number 4096 sum-number 4096;
}
section.addition input#check-first-12:checked ~ .first-labels label[for=check-first-12] {
  --is-one: 1;
}
section.addition input#check-second-12:checked {
  counter-increment: second-number 4096 sum-number 4096;
}
section.addition input#check-second-12:checked ~ .second-labels label[for=check-second-12] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-12 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-12-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-12 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-12-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-13:checked ~ input#check-second-13:checked ~ .result-display {
  --check-13-sum: calc(var(--check-12-carry));
  --check-13-carry: 1;
}
section.addition input#check-first-13:checked ~ input#check-second-13:not(:checked) ~ .result-display {
  --check-13-sum: calc(1 - var(--check-12-carry));
  --check-13-carry: calc(var(--check-12-carry));
}
section.addition input#check-first-13:not(:checked) ~ input#check-second-13:checked ~ .result-display {
  --check-13-sum: calc(1 - var(--check-12-carry));
  --check-13-carry: calc(var(--check-12-carry));
}
section.addition input#check-first-13:not(:checked) ~ input#check-second-13:not(:checked) ~ .result-display {
  --check-13-sum: calc(var(--check-12-carry));
  --check-13-carry: 0;
}
section.addition input#check-first-13:checked {
  counter-increment: first-number 8192 sum-number 8192;
}
section.addition input#check-first-13:checked ~ .first-labels label[for=check-first-13] {
  --is-one: 1;
}
section.addition input#check-second-13:checked {
  counter-increment: second-number 8192 sum-number 8192;
}
section.addition input#check-second-13:checked ~ .second-labels label[for=check-second-13] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-13 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-13-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-13 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-13-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-14:checked ~ input#check-second-14:checked ~ .result-display {
  --check-14-sum: calc(var(--check-13-carry));
  --check-14-carry: 1;
}
section.addition input#check-first-14:checked ~ input#check-second-14:not(:checked) ~ .result-display {
  --check-14-sum: calc(1 - var(--check-13-carry));
  --check-14-carry: calc(var(--check-13-carry));
}
section.addition input#check-first-14:not(:checked) ~ input#check-second-14:checked ~ .result-display {
  --check-14-sum: calc(1 - var(--check-13-carry));
  --check-14-carry: calc(var(--check-13-carry));
}
section.addition input#check-first-14:not(:checked) ~ input#check-second-14:not(:checked) ~ .result-display {
  --check-14-sum: calc(var(--check-13-carry));
  --check-14-carry: 0;
}
section.addition input#check-first-14:checked {
  counter-increment: first-number 16384 sum-number 16384;
}
section.addition input#check-first-14:checked ~ .first-labels label[for=check-first-14] {
  --is-one: 1;
}
section.addition input#check-second-14:checked {
  counter-increment: second-number 16384 sum-number 16384;
}
section.addition input#check-second-14:checked ~ .second-labels label[for=check-second-14] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-14 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-14-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-14 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-14-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-15:checked ~ input#check-second-15:checked ~ .result-display {
  --check-15-sum: calc(var(--check-14-carry));
  --check-15-carry: 1;
}
section.addition input#check-first-15:checked ~ input#check-second-15:not(:checked) ~ .result-display {
  --check-15-sum: calc(1 - var(--check-14-carry));
  --check-15-carry: calc(var(--check-14-carry));
}
section.addition input#check-first-15:not(:checked) ~ input#check-second-15:checked ~ .result-display {
  --check-15-sum: calc(1 - var(--check-14-carry));
  --check-15-carry: calc(var(--check-14-carry));
}
section.addition input#check-first-15:not(:checked) ~ input#check-second-15:not(:checked) ~ .result-display {
  --check-15-sum: calc(var(--check-14-carry));
  --check-15-carry: 0;
}
section.addition input#check-first-15:checked {
  counter-increment: first-number 32768 sum-number 32768;
}
section.addition input#check-first-15:checked ~ .first-labels label[for=check-first-15] {
  --is-one: 1;
}
section.addition input#check-second-15:checked {
  counter-increment: second-number 32768 sum-number 32768;
}
section.addition input#check-second-15:checked ~ .second-labels label[for=check-second-15] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-15 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-15-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-15 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-15-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition input#check-first-16:checked ~ input#check-second-16:checked ~ .result-display {
  --check-16-sum: calc(var(--check-15-carry));
  --check-16-carry: 1;
}
section.addition input#check-first-16:checked ~ input#check-second-16:not(:checked) ~ .result-display {
  --check-16-sum: calc(1 - var(--check-15-carry));
  --check-16-carry: calc(var(--check-15-carry));
}
section.addition input#check-first-16:not(:checked) ~ input#check-second-16:checked ~ .result-display {
  --check-16-sum: calc(1 - var(--check-15-carry));
  --check-16-carry: calc(var(--check-15-carry));
}
section.addition input#check-first-16:not(:checked) ~ input#check-second-16:not(:checked) ~ .result-display {
  --check-16-sum: calc(var(--check-15-carry));
  --check-16-carry: 0;
}
section.addition input#check-first-16:checked {
  counter-increment: first-number 65536 sum-number 65536;
}
section.addition input#check-first-16:checked ~ .first-labels label[for=check-first-16] {
  --is-one: 1;
}
section.addition input#check-second-16:checked {
  counter-increment: second-number 65536 sum-number 65536;
}
section.addition input#check-second-16:checked ~ .second-labels label[for=check-second-16] {
  --is-one: 1;
}
section.addition .result-display {
  --check-16-sum: var(--check-15-carry);
}
section.addition .result-display div.bits span.show-check.check-16 span.digit-0 {
  padding-left: calc( 									(1 - var(--check-16-sum)) * 										(var(--gap) + var(--char-width)) 								);
}
section.addition .result-display div.bits span.show-check.check-16 span.digit-1 {
  padding-right: calc( 									(0 + var(--check-16-sum)) * 										(var(--gap) + var(--char-width)) 								);
}

/*# sourceMappingURL=data:application/json;charset=utf-8,%7B%22version%22:3,%22sourceRoot%22:%22%22,%22sources%22:%5B%22style.scss%22%5D,%22names%22:%5B%5D,%22mappings%22:%22AAIA;EACC;;;AAGD;EACC;EACA;EACA;EACA;EAEA;EAGA;EACA;EACA;EACA;;AAEA;EACC;;;AAIF;EACC;EACA;;;AAGD;EACC;;;AAeD;EACC;EACA;EACA;;AAEA;EACC;EACA;;AAGD;EACC;EAEA;EACA;EAGC;;AAIF;EACC;;AAGD;EACC;;AAGD;EACC;;AAGD;EACC;EACA;EACA;;AAKD;EACC;EACA;EACA;;AAEA;EACC;EAEA,OAVW;EAWX,QAXW;;AAcZ;EACC;EACA;EACA;EAEA;EAEA;EACA;EAEA;EACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;EAMC;EACA;EACA;EACA;EACA;EACA;EACA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;EACC;EACA;EACA;EACA;EACA;EACA;;AAIF;EACC;;AACA;EACC;;AAGF;EACC;;AAED;EACC;;AAED;EACC;;AAED;EACC;;AAED;EACC;;AACA;EACC;;AAMJ;EACC;EACA;;AAEA;EACC;EACA;EACA;;AAEA;EACC;EACA;EACA;EAEA,OA3FU;EA4FV,QA5FU;EA8FV;EACA;EAEA;EAEA;EAEA;;AAGC;EAEC;;AAeE;EACC;EAqBA;;AAtBD;EACC;EAqBA;;AAtBD;EACC;EAqBA;;AAtBD;EACC;EAqBA;;AAsBN;EACC;;AAGC;EACC;;AALH;EACC;;AAGC;EACC;;AAMJ;EACC;;AAMI;EACC;;AADD;EACC;;AA/DA;EACC;EAqBA;;AAtBD;EACC;EAqBA;;AAtBD;EACC;EAqBA;;AAtBD;EACC;EAqBA;;AAsBN;EACC;;AAGC;EACC;;AALH;EACC;;AAGC;EACC;;AAMJ;EACC;;AAMI;EACC;;AADD;EACC;;AA/DA;EACC;EAqBA;;AAtBD;EACC;EAqBA;;AAtBD;EACC;EAqBA;;AAtBD;EACC;EAqBA;;AAsBN;EACC;;AAGC;EACC;;AALH;EACC;;AAGC;EACC;;AAMJ;EACC;;AAMI;EACC;;AADD;EACC;;AA/DA;EACC;EAqBA;;AAtBD;EACC;EAqBA;;AAtBD;EACC;EAqBA;;AAtBD;EACC;EAqBA;;AAsBN;EACC;;AAGC;EACC;;AA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%22,%22file%22:%22style.css%22%7D */
